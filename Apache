sudo dnf install httpd   #ставим
sudo firewall-cmd --add-service=http   #добавляем правило в FW
sudo firewall-cmd --add-service=https   #добавляем правило в FW
sudo firewall-cmd --runtime-to-permanent
sudo dnf install mod_ssl   #ставим для настройки https
httpd -M | grep ssl   #проверить список модулей
sudo systemctl enable --now httpd   #включаем
man httpd.conf   #ман по конфигу апаче
sudo vim /etc/httpd/conf/httpd.conf   #главный конфиг
Listen 10.11.12.9:8080   #слушать на определенном порту на конкретном ip
ServerAdmin webserverb@example.com   #контакты админа
ServerName 10.11.12.9   #или можно указать dns:port
DocumentRoot "/var/www/html"   #корневой каталог с файлами веб-сайта
sudo vim /etc/httpd/conf.d/two-websites.conf   #создаем наш собственный конфиг для хостинга двух сайтов

<VirtualHost *:80>   #звездочка означает принимать подключения с ip-адресов всех интерфейсов системы
    ServerName store.example.com
    DocumentRoot /var/www/store/
</VirtualHost>

<VirtualHost *:80>  #можно указать конкретный ip-адрес интерфейса, например для внутренней сети или для внешней
    ServerName blog.example.com
    DocumentRoot /var/www/blog/
</VirtualHost>

# первый VirtualHost считается дефолтным, т.е. если обращение будет к чему-то несуществующему в нашем конфиге, откроется первый VH
apachectl configtest   #протестировать конфиг
mkdir /var/www/store/
mkdir /var/www/blog/
vim /var/www/html/index.html => This is the MAIN site.
vim /var/www/blog/index.html => This is the BLOG.
vim /var/www/store/index.html => This is the STORE.
sudo systemctl reload httpd.service
sudo vim /etc/httpd/conf.d/ssl.conf   #конфиг с настройками SSL

<VirtualHost *:80>   #звездочка означает принимать подключения с ip-адресов всех интерфейсов системы
    ServerName www.example.com
    SSLEngine on
    SSLCertificateFile "/path/to/file.cert"
    SSLCertificateKeyFile "/path/to/file.key"
</VirtualHost>

sudo vim /etc/httpd/conf.modules.d/00-mpm.conf   #конфиг модуля
LoadModule   #комментируем строку для отключения модуля

# Настройка логирования
sudo vim /etc/httpd/conf/httpd.conf
ErrorLog "/var/log/httpd/error2/log"   #лог ошибок
LogLevel warn   #уровень логирования
LogFormat common или combined
%h - remote host name, %l - log name, %u - user name, %t - time

sudo vim /etc/httpd/conf.d/two-websites.conf 

<VirtualHost *:80>
    ServerName store.example.com
    DocumentRoot /var/www/store/
    CustomLog /var/log/httpd/store.example.com_access.log combined   #настраиваем хранение логов в отдельные файлы
    ErrorLog /var/log/httpd/store.example.com_error.log
</VirtualHost>

<VirtualHost *:80>  #можно указать конкретный ip-адрес интерфейса, например для внутренней сети или для внешней
    ServerName blog.example.com
    DocumentRoot /var/www/blog/
</VirtualHost>

sudo systemctl reload httpd.service

# Restrict access to a web page
sudo mv /etc/httpd/conf.d/two-websites.conf /etc/httpd/conf.d/two-websites.conf.disabled   #отключаем наш конфиг
sudo systemctl reload httpd.service

sudo vim /etc/httpd/conf/httpd.conf
<Directory "/var/www/html">
    Options Indexes FollowSymLinks   #Indexes позволяет просматривать содержимое директории, например если внутри /var/www/html/admin, 
# index.html отсутствует, но есть файлы 1,2,3, то мы увидим их список при открытии в браузере localhost/admin
# FollowSymLinks позволяет апаче использовать soft links, то есть если например файл 1 - это ярлык на setup.exe, то при нажатии на файл 1
# файл setup.exe скачается
    AllowOverride None   #запрещает различным CMS вроде WordPress применять индивидуальные настройки для apache с помощью .htaccess
# опция All наоборот разрешит
    Require all granted   #разрешает всем доступ к контенту /var/www/html
</Directory>

<Directory "/var/www/html/admin">
    Require all denied   #запретить доступ к админской директории всем
    #Require ip 192.168.1.79 203.0.1.113   #разрешить доступ к админской директории только с определенных ip, можно указать диапазон
</Directory>

<Files "*.txt">
    Require all denied   #запретить доступ к txt-файлам
</Files>
  
sudo htpasswd -c /etc/httpd/passwords aaron   #c=create, создать файл-пароль для юзера aaron
sudo htpasswd /etc/httpd/passwords john   #без опции "c" команда добавит новую запись в уже созданный файл-пароль
sudo htpasswd -D /etc/httpd/passwords john   #D=delete, удалить запись о пользователе john

<Directory "/var/www/html/admin">
    AuthType Basic   #задаем настройки авторизации
    AuthBasicProvider file
    AuthName "Secret admin page"
    AuthUserFile /etc/httpd/passwords
    Require valid-user
</Directory>


Добавить response headers в конфиг Apache /etc/httpd/conf/httpd.conf:

Header set X-XSS-Protection "1; mode=block"
Header always append X-Frame-Options SAMEORIGIN
Header set X-Content-Type-Options nosniff

Либо:
Header always set X-XSS-Protection "1; mode=block"
Header always set X-Frame-Options SAMEORIGIN
Header always set X-Content-Type-Options nosniff
