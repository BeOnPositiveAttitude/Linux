# anacron может планировать выполнение задач в днях, неделях, месяцах
# cron может планировать выполнение задач более дробно, в минутах, часах и т.д.
# cron может пропустить выполнение задачи, если например сервер находился в выключенном состоянии и затем включен в 00:05, 
# а выполнение задачи было запланировано на 00:01, то задача не будет выполнена cron-ом в этот день
# anacron в свою очередь не пропускает такие задачи
yun install -y cronie   #установка демона crond
cat /etc/crontab   #файл-пример, из которого можно вспомнить синтаксис
*   #match all possible values, every hour
,   #match multiple values, 15,30
-   #range of values, 2-4
/   #specifies steps, */4
# можно комбинировать, например 0-8/4
crontab -e   #редактировать cron table текущего юзера
35 6 * * * /usr/bin/touch test_file   #необходимо указывать полный путь до исполняемого файла
0 4 * * * sudo sh /opt/script.sh   #для выполнения скриптов необходимо указать команду sh
0 4 * * 1 /usr/local/bin/script1.sh   #каждый понедельник в 04:00 AM
30 4 1 * * /usr/local/bin/script2.sh   #каждое первое число месяца в 04:30 AM
0 1,2,3 * * * /usr/local/bin/script3.sh   #каждый день в 01:00, 02:00, 03:00 AM
crontab -l   #смотреть cron table для текущего юзера
sudo crontab -l   #смотреть cron table для root-a
sudo crontab -e -u jane   #u=user, редактировать cron table юзера jane
crontab -r   #r=remove, удалить cron table для текущего юзера
crontab -r -u jane   #удалить cron table юзера jane
# существует несколько директорий для задач cron
/etc/cron.daily
/etc/cron.hourly
/etc/cron.monthly
/etc/cron.weekly
# скрипты для исполнения cron-ом не должны иметь extension, то есть не должно быть .sh
# копируем нужный нам скрипт в соответствующую директорию выше и даем ему права +rx

# чтобы ограничить доступ к выполнению crontab определенным пользователям создаем файл /etc/cron.deny и добавляем туда их логины в столбик
# чтобы разрешить доступ к выполнению crontab определенным пользователям создаем файл /etc/cron.allow и добавляем туда их логины в столбик

sudo vim /etc/anacrontab   #файл для задания anacron-jobs
sudo anacron -n   #n=now, запустить все запланированные джобы прямо сейчас, если джоба уже запускалась сегодня, то повторно она не запустится
sudo anacron -n -f   #f=force, запустить все запланированные джобы принудительно прямо сейчас, даже если джоба уже запускалась сегодня
# 3 (каждые три дня, можно указать например @weekly, @monthly)   10 (задержка перед запуском джобы в минутах, т.к. если на этот день запланирован запуск 15 джобов,
# и сервер был выключен и затем включился, чтобы они не запустились все разом и не создали высокую нагрузку на систему)   
# job_name (произвольное имя джобы, котороое мы увидим в логах)   /usr/bin/touch /root/anacron_created_this (необходимое действие, команда)
anacron -T   #протестировать синтаксис анакрон
at 15:00 или 
at 'August 20 2022' или 
at '2:30 August 20 2022' или
at 'now + 30 minutes' или
at 'now + 3 hours'   #через три часа от текущего момента, или
at 'now + 3 days'    
at 'now + 3 weeks'
at 'now + 3 months'   
at> /usr/bin/touch file_created_by_at   #создание джобы с помощью at, выйти Ctrl+D
atq   #смотреть запланированные джобы, отсюда берем id джобы
at -c 20   #c=cat, смотреть детально свойства джобы номер 20
atrm 20   #удалить джобу с номером 20
