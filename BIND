sudo dnf install bind bind-utils
/etc/named.conf   #конфиг-файл bind
man named.conf   #смотреть ман по конфиг-файлу bind
listen-on port 53 { 127.0.0.1; };   #если указан 127.0.0.1, значит bind будет принимать подключения только от сервисов с того же локального хоста
listen-on port 53 { 127.0.0.1; 192.168.0.17; };   #указываем с какого хоста принимать подключения
listen-on port 53 { any; };   #принимать подключения с любой адреса
allow-query { localhost; };   #кому разрешено запрашивать инфу о dns с нашего bind
allow-query { localhost; 192.168.0.0/24; };   #можно указать целую подсеть
allow-query { any; };   #или вообще с любого адреса
recursion yes;   #разрешить получать инфу о dns с других серверов в интернете (когда записи нет в собственном кеше)
sudo systemctl enable --now named.service   #запустить bind
firewall-cmd --add-service=dns --permanent   #добавить правило в FW
dig @127.0.0.1 google.com   #выполняем с нашего bind для проверки работы

# Configure DNS zones
# Редактируем файл sudo vim /etc/named.conf, добавляем новую зону
zone "example.com" IN {
   type master;   #главный сервер, бывает еще тип slave
   file "example.com.zone";   #имя файла, где хранится инфа о зоне
};
sudo cp --preserve=ownership /var/named/named.localhost /var/named/example.com.zone   #копируем файл шаблона зоны с сохранением permissions
sudo vim /var/named/example.com.zone   #редактируем созданный файл зоны
$TTL 1D   #время на которое другие dns-сервера могут закешировать запись, D=days, H=hours
SOA - Start Of Authority, начальная запись зоны, которая указывает местоположение эталонной записи о домене. 
# Она содержит в себе контактную информацию лица, ответственного за данную зону, время кэширования информации на серверах и данные о взаимодействии DNS.
@ - original domain = example.com
IN - internet (можно и не указывать вовсе)
administrator.example.com. - почта контактного лица, ответственного за эту зону, @ не может быть указана, т.к. собака в этой записи имеет другое значение
serial - сериыйный номер, если значение на мастере например 2, а на реплике 1, значит содержимое зоны мастера изменилось и нужна синхронизация
refresh - как часто проверять обновления зоны, по истечении данного времени вторичный DNS обращается к первичному для получения копии текущей SOA-записи. 
retry - сколько перед следующей попыткой обновления, в случае если произошел сбой обновления информации о зоне
expire - время (в секундах), в течение которого вторичный DNS будет пытаться завершить синхронизацию зоны с первичным. 
# Если это время истечет до того, как синхронизация закончится, то зона на вторичном DNS-сервере перестанет обслуживать запросы об этой зоне.
minimum - время жизни кэша для негативного ответа на запрос в зонe. В случае когда в зоне не найдена запрошенная запись
@     NS ns1.example.com.   #добавляем запись о первом NS-сервере
@     NS ns2.example.com.   #добавляем запись о втором NS-сервере
ns1   A  10.11.12.9   #добавляем А-запись о наших NS-серверах
ns2   A  10.11.12.10   #добавляем А-запись о наших NS-серверах
@     A  203.0.113.15   #А-запись о нашем домене example.com
# www   A  203.0.113.15   #А-запись о нашем домене www.example.com
www   CNAME 203.0.113.15   #либо alias на тот же адрес
example.com.   MX 10 mail.example.com   #MX-записи, 10 - приоритет, выше чем 20
example.com.   MX 20 mail2.example.com   #MX-записи, 20 - приоритет, ниже чем 10
mail  A  203.0.113.80   #А-запись о почтовике
mail2 A  203.0.113.81   #A-запись о почтовике2
server1  AAAA  2001:D88:10::1   #AAAA-запись для ipv6-адресов
example.com.   TXT   "We can write anything in here!"   #TXT-запись может содержать все что угодно
sudo systemctl restart named.service
dig @localhost example.com   #выполняем с нашего bind для проверки работы
dig @localhost example.com ANY   #выполняем с нашего bind для проверки работы, инфа о всех записях

Файл `/etc/nsswitch.conf` отвечает за приоритет при резолве dns-записей, по дефолту сначала ищет в `/etc/hosts`, потом на DNS-сервере.

Внутренний DNS-сервер компании можно настроить таким образом, чтобы он перенаправлял запросы о неизвестных ему хостах на внешний DNS-сервер.

Содержимое файла /etc/resolv.conf:

```
nameserver 192.168.1.100
search     mycompany.com prod.mycompany.com   #если мы выполним команду ping web (короткое имя), тогда будет выполнен поиск записи в доменах mycompany.com и prod.mycompany.com
```
