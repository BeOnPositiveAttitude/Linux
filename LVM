sudo dnf install lvm2   #если еще не установлен в системе
sudo lvmdiskscan   #сканировать систему на наличие lvm-дисков
sudo pvcreate /dev/sdc /dev/sdd   #создать два PV
sudo pvs   #смотреть созданные PV
sudo vgcreate my_volume /dev/sdc /dev/sdd   #создать VG из двух PV
sudo pvcreate /dev/sde   #создать дополнительный PV для расширения нашей VG
sudo vgextend my_volume /dev/sde   #расширить нашу VG
sudo vgs   #смотреть созданные VG
sudo vgreduce my_volume /dev/sde   #уменьшить нашу VG за счет выкидывания PV=/dev/sde
sudo vgremove --force my_volume   #удалить VG
sudo pvremove /dev/sde   #удалить PV
sudo lvcreate --size 2G --name partition1 my_volume   #создать LV с именем partition1 в VG=my_volume
sudo lvcreate --size 6G --name partition2 my_volume   #создаем второй LV
sudo lvcreate -l 100%FREE --name partition1 my_volume   #создать lv и отдать все свободное место с vg на этот lv
sudo lvs   #смотреть LV
sudo lvremove volume1/smalldata   #удалить LV smalldata из VG volume1

# PE - physical extents, допустим есть два физических диска по 4Мб и мы объединил их в одну VG размером 8Mб, создали там LV
# и хотим записать файл размером 8Мб, система будет думать что мы пишем на один единый диск размером 8Мб, но физически это не так
# вот для чего нужен размер PE, мы можем указать размер PE=4Мб и файл размажется на два диска по 4Мб

sudo lvresize --extents 100%VG my_volume/partition1   #расширить LV=partition1 на все extents в VG
sudo lvresize --size 2G my_volume/partition1   #уменьшить размер LV до 2Гб, при этом будет предупреждение, что все данные будут потеряны
sudo lvdisplay   #смотреть детали всех LV
sudo mkfs.xfs /dev/my_volume/partition1   #создать ФС на LV

# команда lvresize меняет только размер LV, при этом размер ФС остается неизменным!!!
sudo lvresize --resizefs --size 3G my_volume/partition1   #расширить размер LV и сразу же размер ФС на нем

lvextend -l +50%FREE -r /dev/alt/root   #l - размер в extents, L - размер в Мб\Гб, r - сразу сделать ресайз ФС в одной команде

man lvm   #справка

LVM Mirroring
```bash
lsblk
NAME         MAJ:MIN RM  SIZE RO TYPE MOUNTPOINT
vda          252:0    0   50G  0 disk 
├─vda1       252:1    0  499M  0 part /boot
└─vda2       252:2    0 49,5G  0 part 
  ├─alt-usr  253:0    0   15G  0 lvm  /usr
  ├─alt-var  253:1    0  9,5G  0 lvm  /var
  └─alt-root 253:2    0 10,6G  0 lvm  /
vdb          252:16   0    2T  0 disk 
├─alt-data   253:3    0  1,8T  0 lvm  /data
└─alt-tmp    253:4    0   15G  0 lvm  /tmp
vdc          252:32   0    2T  0 disk 

df -h
pvcreate /dev/vdc
vgcreate altnew /dev/vdc
lvcreate -L 15G -n tmp altnew
lvcreate -L 1800G -n data altnew
mkfs.ext4 /dev/mapper/altnew-tmp
mkfs.ext4 /dev/mapper/altnew-data
mount /dev/mapper/altnew-tmp /tmp-new/
mount /dev/mapper/altnew-data /data-new/
rsync -av --one-file-system /tmp/ /tmp-new/
rsync -av --one-file-system /data/ /data-new/
umount /tmp/.private/root/
umount /tmp
umount /data
umount /data-new/
rmdir /data-new/
rmdir /tmp-new/
vim /etc/fstab # Меняем название группы alt на altnew в путях к точкам монтирования /tmp и /data
mount -a
lvremove /dev/mapper/alt-data
lvremove /dev/mapper/alt-tmp # Если получаем сообщение: Logical volume alt/tmp contains a filesystem in use, то делаем reboot и повторяем команду lvremove /dev/mapper/alt-tmp
vgreduce alt /dev/vdb
pvremove /dev/vdb
```
