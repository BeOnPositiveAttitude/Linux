# ps -a и ps a - это разные команды
man ps => /EXAMPLES   #смотреть примеры в мануале
# в выводе ps aux есть колонка TIME, означает время использования CPU определенным процессом
# в колонке COMMAND есть имена процессов в квадратных скобках, например [kthreadd], это процессы ядра в особом защищенном сегменте
ps u 1   #u=user-oriented-format, смотреть инфу по определенному процессу, указав его PID
ps -U aaron   #смотреть список процессов, запущенных юзером aaron
ps u -U aaron   #смотреть список процессов, запущенных юзером aaron в user-oriented-format
pgrep -a syslog   #process grep, грепнуть список всех процессов и искать там syslog, отобразит PID искомого процесса и его имя
nice -n 11 bash   #n=numeric, изменить значение nice процесса bash на 11
# обычный юзер в системе может только повышать значение nice в диапазоне от 0 до 19, тем самым понижая приоритет процесса
# root юзер может повышать приоритет процесса путем понижения значения nice до отрицательных значений
ps lax   #l=long-listing-format, отобразит значения nice процессов в системе
ps fax   #f=forest-view, отобразит список процессов в формате дерева родитель-ребенок
renice 7 PID_num   #переназначить nice value для определенного процесса
kill -L   #отобразит список возможных вариантов завершения процесса
kill -SIGHUP PID_num   #SIGHUP=signal-hang-up=повесить-трубку, оповещение программ, запущенных через модемное соединение, об обрыве связи
# в ответ на получение SIGHUP демон обычно перезапускается или просто повторно читает файл конфигурации;
kill PID_num   #без указания конкретного сигнала по умолчанию посылается SIGTERM, мягкое завершение процесса
pkill -KILL bash   #pkill=process-kill, убить все процессы bash
# процесс можно "поставить на паузу", например открытое окно редактора vim с помощью Ctrl+z, это приостанавливает выполнение процесса
fg   #foreground, вернуть процесс обратно в активное состояние
sleep 300 &   #запустить процесс и сразу же отправить его в background, там он продолжит выполняться
jobs   #смотреть процессы бегущие в background-е
fg 1   #вернуть процесс под номером 1 из bg в fg
# также можно отправить выполняться в bg процесс под номером 1, который в данный момент поставлен на паузу через Ctrl+z, командой bg 1
lsof -p PID_numb   #list-of-files, p=process, смотреть список файлов, с которыми работает определенный процесс
sudo lsof /var/log/messages   #смотреть какие процессы работают с указанным файлом
